
# CRP FILE PROCESSING
if not CRP_DF.empty:
    print("\n")
    logger.debug(f" ------------------------- Company's IDS------------------------- ")
    Company_ids = set()
    Company_ids.update(CRP_DF["Comp_No"].values.tolist())
    comp_ids_List = list(Company_ids)
    logger.debug(comp_ids_List)
    
    print("\n")
    logger.debug(f" ------------------------- Company's NAMES------------------------- ")
    Company_names = set()
    Company_names.update(CRP_DF["Comp_Name"].values.tolist())
    comp_names_List = list(Company_names)
    logger.debug(comp_names_List)


    
    
    print("\n")    
    logger.debug(f" ------------------------- Company's DATA ------------------------- ")
    company_data_list = []

    for company_id in comp_ids_List:
        query_data = CRP_DF.query(f'Comp_No == {int(company_id)}')
        
        if not query_data.empty:

            company_info = {
                'Comp_No': int(query_data['Comp_No'].iloc[0]),
                'Comp_Name': query_data['Comp_Name'].iloc[0],
                'Street': query_data['Street'].iloc[0] if not pd.isna(query_data['Street'].iloc[0]) else '',
                'ZipCode': int(query_data['ZipCode'].iloc[0]) if not pd.isna(query_data['ZipCode'].iloc[0]) else 0,
                'City': query_data['City'].iloc[0] if not pd.isna(query_data['City'].iloc[0]) else '',
                'Phone': query_data['Phone'].iloc[0] if not pd.isna(query_data['Phone'].iloc[0]) else '',
                'Comp_MonthLumpSum': int(query_data['Comp_MonthLumpSum'].iloc[0]) if not pd.isna(query_data['Comp_MonthLumpSum'].iloc[0]) else 0,
                'Comp_ContractStart': query_data['Comp_ContractStart'].iloc[0] if not pd.isna(query_data['Comp_ContractStart'].iloc[0]) else '',
                'Comp_ContractEnd': query_data['Comp_ContractEnd'].iloc[0] if not pd.isna(query_data['Comp_ContractEnd'].iloc[0]) else '',
            }
            
            # Convert to datetime if not None
            if company_info['Comp_ContractStart']:
                try:
                    company_info['Comp_ContractStart'] = parse(company_info['Comp_ContractStart'])
                except (ValueError, TypeError):
                    company_info['Comp_ContractStart'] = None
            
            if company_info['Comp_ContractEnd']:
                try:
                    company_info['Comp_ContractEnd'] = parse(company_info['Comp_ContractEnd'])
                except (ValueError, TypeError):
                    company_info['Comp_ContractEnd'] = None
            
            
            company_data_list.append(company_info)
            
    logger.debug(company_data_list)
    logger.debug(len(company_data_list))
    
        
    
    print("\n")
    logger.debug(f" ------------------------- Valid Company's DATA ------------------------- ")
    valid_company_data_list = []
    
    # Get the current date
    current_date = datetime.now()

    if current_date.month == 1:
        last_month = 12
        last_month_year = current_date.year - 1
    else:
        last_month = current_date.month - 1
        last_month_year = current_date.year

    for company_info in company_data_list:
        contract_end_date = company_info.get('Comp_ContractEnd')
        
        if contract_end_date:
            if not (contract_end_date.month == last_month and contract_end_date.year == last_month_year) and contract_end_date > current_date:
                valid_company_data_list.append(company_info)

    logger.debug(valid_company_data_list)
    logger.debug(len(valid_company_data_list))

    print("\n")
    logger.debug(f" ------------------------- CHECK LUM SUM ------------------------- ")
    Lum_Sum_list = []
    
    for company in valid_company_data_list:
        lum_sum = company.get('Comp_MonthLumpSum')
        company_id = company.get('Comp_No')
        
        if lum_sum == 0:
            #logger.debug(f"Comp_MonthLumpSum is 0 for company {company_id}")
            continue 
        
        if lum_sum != 0:
            #logger.debug(f"Comp_MonthLumpSum is {lum_sum} for company {company_id}")
            Lum_Sum_list.append({
                'Comp_No': company_id,
                'Comp_MonthLumpSum': lum_sum
            })

    
    logger.debug(Lum_Sum_list)



#CRP_DF.to_csv("test1.csv", index=False)




#print(CRP_DF)
# Concatenate all DataFrames in the list into a single DataFrame
#if df_list:
#    CRP_DF = pd.concat(df_list, ignore_index=True)
#    droped_CRP_DF=CRP_DF.drop_duplicates()
#
#for col in droped_CRP_DF.columns:
#    print(col)
#    print("-")
    #droped_CRP_DF.drop(columns=['TradingDate'])
