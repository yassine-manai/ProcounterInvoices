null value 

read from csv 

data frame read one file 
// multi files 




def read_multiple_csv_files(
    file_paths: Union[str, List[str]],
    encoding: str = 'utf-8',
    usecols: Optional[List[str]] = None,
    dtypes: Optional[dict] = None,
    chunksize: Optional[int] = None,
    ignore_errors: bool = False
) -> pd.DataFrame:
    """
    Read multiple CSV files and combine them into a single DataFrame.

    :param file_paths: A string (glob pattern) or list of file paths
    :param encoding: Encoding to use for reading CSV files
    :param usecols: List of columns to use (if not all columns are needed)
    :param dtypes: Dictionary of column data types
    :param chunksize: Number of rows to read at a time (for large files)
    :param ignore_errors: If True, skip files that cause errors
    :return: Combined DataFrame or None if no valid data
    """
    all_dfs = []

    # Convert string input to list of file paths
    if isinstance(file_paths, str):
        file_paths = glob.glob(file_paths)

    for file_path in file_paths:
        try:
            if not os.path.exists(file_path):
                raise FileNotFoundError(f"File not found: {file_path}")

            logger.info(f"Reading file: {file_path}")

            if chunksize:
                chunks = pd.read_csv(
                    file_path, 
                    encoding=encoding, 
                    usecols=usecols, 
                    dtype=dtypes, 
                    chunksize=chunksize
                )
                df = pd.concat(chunks, ignore_index=True)
            else:
                df = pd.read_csv(
                    file_path, 
                    encoding=encoding, 
                    usecols=usecols, 
                    dtype=dtypes
                )

            all_dfs.append(df)
            logger.info(f"Successfully read {len(df)} rows from {file_path}")

        except Exception as e:
            error_msg = f"Error reading file {file_path}: {str(e)}"
            if ignore_errors:
                logger.warning(error_msg)
            else:
                logger.error(error_msg)
                raise

    if not all_dfs:
        logger.warning("No valid data read from any files.")
        return None

    combined_df = pd.concat(all_dfs, ignore_index=True)
    logger.info(f"Combined DataFrame created with {len(combined_df)} total rows.")
    return combined_df

# Example usage
# files = "path/to/csv/files/*.csv"
# df = read_multiple_csv_files(files, usecols=['column1', 'column2'], dtypes={'column1': str, 'column2': float})
# if df is not None:
#     print(df.head())



















































""" record = {
  'Name': ['Ankit', 'Amit', 'Aishwarya', 'Priyanka', 'Priya', 'Shaurya' ],
  'Age': [21, 19, 20, 18, 17, 21],
  'Stream': ['Math', 'Commerce', 'Science', 'Math', 'Math', 'Science'],
  'Percentage': [88, 92, 95, 70, 65, 78]}


dataframe = pd.DataFrame(record).copy()

#df = dataframe.iloc[3:]

print(dataframe.to_string(header=False)) """